<launch>
    <arg name="robot_name"/>
    <arg name="init_pose"/>
    
    <param name="robot_name" value=  "$(arg robot_name)" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" 
          name="robot_state_publisher">
       <param name="publish_frequency" type="double" value="100.0" />
    </node>
    <!-- The odometry estimator, throttling, fake laser etc. go here -->
    <!-- All the stuff as from usual robot launch file -->
  <rosparam file="$(find fetch_gazebo)/config/default_controllers.yaml" command="load" />

  <!-- Put a robot in gazebo, make it look pretty -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		  args="$(arg init_pose) -unpause -urdf -param /robot_description -model $(arg robot_name)
     -robotNamespace $(arg robot_name) -namespace $(arg robot_name)"/>
  <node name="prepare_robot" pkg="fetch_gazebo" type="prepare_simulated_robot.py" />

  <!-- Give this robot a serial number and version -->
  <param name="robot/serial" value="ABCDEFGHIJKLMNOPQRSTUVWX" />
  <param name="robot/version" value="0.0.1" />

  <!-- Head Camera Pipeline -->
  <include file="$(find fetch_gazebo)/launch/include/head_camera.launch.xml" />

  <!-- Publish base_scan_raw if anything subscribes to it -->
  <node name="publish_base_scan_raw" pkg="topic_tools" type="relay" args="base_scan base_scan_raw" >
    <param name="lazy" type="bool" value="True"/>
  </node>

  <!-- Start a mux between application and teleop -->
  <node pkg="topic_tools" type="mux" name="cmd_vel_mux" respawn="true" args="base_controller/command /cmd_vel /teleop/cmd_vel">
    <remap from="mux" to="cmd_vel_mux" />
  </node>

</launch>

